apiVersion: v1
kind: Namespace
metadata:
  name: chaos-monkey
  labels:
    app: chaos-monkey
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chaos-monkey
  namespace: chaos-monkey
  labels:
    app: chaos-monkey
spec:
  selector:
    matchLabels:
      app: chaos-monkey
  template:
    metadata:
      labels:
        app: chaos-monkey
    spec:
      serviceAccountName: chaos-monkey
      containers:
      - name: chaos-monkey
        image: ghcr.io/mariouhrik/chaos-monkey:latest
        imagePullPolicy: Always
        securityContext:
          runAsUser: 2000
          runAsGroup: 3000
          runAsNonRoot: true
          privileged: false
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - all
        env:
        - name: CM__INTERVAL # interval between pod deletions in seconds
          value: "60"
        - name: CM__TARGET_NAMESPACE # name of the target namespace where to delete pods
          value: "chaos"
        - name: CM__LOGLEVEL
          value: "INFO" # OR "DEBUG", "WARNING", "ERROR", "CRITICAL"
        resources:
          requests:
            memory: 100Mi
            cpu: 50m
          limits:
            memory: 400Mi
            cpu: 200m
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: chaos-monkey
  namespace: chaos-monkey
  labels:
    app: chaos-monkey
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: chaos-monkey
  labels:
    app: chaos-monkey
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: chaos-monkey
  labels:
    app: chaos-monkey
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: chaos-monkey
subjects:
- kind: ServiceAccount
  name: chaos-monkey
  namespace: chaos-monkey
